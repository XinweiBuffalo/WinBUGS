{"title":"A quick tutorial of WinBUGS and R2WinBUGS","markdown":{"yaml":{"title":"A quick tutorial of WinBUGS and R2WinBUGS","title-block-banner":true,"date":"2023-04-17","date-format":"short","author":[{"name":"Xin-Wei Huang","affiliations":["Department of Biostatistics, University at Buffalo"]}],"description":"Lecture of STA667 Advanced Bayesian Inference in 2023 Spring"},"headingText":"Getting start with WinBUGS","containsRefs":false,"markdown":"\n\n\nThe BUGS (Bayesian inference Using Gibbs Sampling) is a project on developing software for the Bayesian analysis of complex statistical models using Markov chain Monte Carlo (MCMC) methods. The project started in 1989 at the [MRC Biostatistics Unit](https://www.mrc-bsu.cam.ac.uk/software/bugs/){target=\"_blank\"}. WinBUGS is a statistical software based on BUGS project initially released in 1997 by MRC Biostatistics Unit, and Imperial College School of Medicine. It is a GUI for using BUGS program on Windows system. WinBUGS is no longer update since 2007 because the development of OpenBUGS. The latest version of WinBUGS is 1.4.3.\n\n## Installation of WinBUGS 1.4.3\n\n1.  Download WinBUGS 1.4.3 on your PC:\n\n    i)  [.zip file](https://www.mrc-bsu.cam.ac.uk/wp-content/uploads/2018/11/winbugs143_unrestricted.zip){target=\"_blank\"} for Windows 64 bit or 32 bit. (Recommended)\n\n    ii) [.exe file](https://www.mrc-bsu.cam.ac.uk/wp-content/uploads/WinBUGS14.exe){target=\"_blank\"} for easier installation but 32 bit Windows only.\n\n    iii) for macOS.\n\n2.  Extract file folder `\\winbugs143_unrestricted.zip\\winbugs14_full_patched\\WinBUGS14` to a path that you want to store the software, for example `C:\\Program Files`.\n\n3.  Create a shortcut for `WinBUGS14.exe` to desktop or start.\n\n## Example of using WinBUGS\n\nConsider a statistical model $$\nX_i \\sim \\text{Normal}(\\mu,\\sigma^2)\n$$ and given the prior distributions $\\mu \\sim \\text{Normal}(0, 100^2)$ and $1 / {\\sigma}^2 \\sim \\text{Gamma}(0.001, 0.001)$.\n\nA WinBUGS program is consist of three sections: Model, Data, and Initial Values. Define our model in `model{...}`. Use `~` to specify probability distributions, or use `<-` to make transformation of parameter and data. Data will be stored in a list which has the same syntax as R. Initial values are also stored in a list.\n\n``` {{bugs}}\n\nmodel{\n  for (i in 1:20){\n    x[i] ~ dnorm (mu[1], prec[1])\n  }\n  \n  mu[1] ~ dnorm (0, 0.0001)\n  prec[1] ~ dgamma (0.001, 0.001)\n  \n  s2[1] <- 1/prec[1]\n}\n\nlist(x = c(6.62, 6.71, 5.07, 4.39, 5.68, 3.94, 5.83, 2.31, 3.60, 4.64,\n1.79, 3.12, 3.46, 8.25, 5.49, 6.49, 2.65, 9.14, 5.31, 6.58))\n\nlist( mu=c(0), prec=c(1) )\n```\n\nNote: In BUGS, the second parameter of `dnorm` is the inverse of normal variance.\n\nNow let's see how to run these codes in WinBUGS. Open WinBUGS and create an empty script (File -\\> New). ![New script](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/01_interface.png?raw=true)\n\nCopy the above code and paste them into WinBUGS. ![BUGS program](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/02_script.png?raw=true)\n\nOpen the Specification Tool (Model -\\> Specification), then highlight the model section and do \"check model\". If you define your model correctly, it will show \"model is syntactically correct.\" at the bottom left-hand corner. ![Model specification](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/03_specify_and_check.png?raw=true)\n\nThe next step is to load the data. Highlight data section () and click \"load data\". You will see \"data loaded\"at the bottom left-hand corner. ![Load data](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/04_load_data.png?raw=true)\n\nAnd then compile the model by click \"compile\" and look for \"model compiled.\" ![Compile](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/05_compile.png?raw=true)\n\nSimilarly, highlight the initial values and click \"load inits\". ![Initis](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/06_inits.png?raw=true)\n\nOpen Sample Monitor Tool (Inference -\\> Samples), type in the parameters that we are going to monitor, for example \"mu\" and \"s2\", then click \"set\". ![Sampler](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/07_sampler_par.png?raw=true)\n\nOpen Update Tool (Model -\\> Update) and type in how many samples you would like to generate. Click \"update\" and wait for \"updates took x s\" message when update done. ![Update done](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/09_update_done.png?raw=true)\n\nYou can use Sample Monitor Tool to do summary statistics, time series plot for MCMC samples, density curve, etc. ![Posterior](https://github.com/XinweiBuffalo/WinBUGS/blob/main/pic/10_post.png?raw=true)\n\n# The R interface of WinBUGS: R2WinBUGS\n\n`R2WinBUGS` is an R package which provide an interface for running WinBUGS on R. Although we still need to specify model in a separate `.bug` file, loadiing data can be done on R, and complex inference on the MCMC samples will be much more easier and friendly.\n\n## Install R2WinBUGS package\n\nUse `install.packages` and `library` to install and load the package.\n\n```{r, warning=FALSE, message=FALSE}\n#install.packages(\"R2WinBUGS\")\nlibrary(\"R2WinBUGS\")\n```\n\n\n## School data example\n\nThe Scholastic Aptitude Test (SAT) data comes from the SAT-V (Verbal) on eight different high schools from an experiment Rubin (1981). The data includes the estimated treatment effects and the corresponding standard error from an ANCOVA. This example was analyzed using a hierarchical normal model:\n$$\ny_i\\sim \\text{Normal}(\\theta_j, \\sigma_y^2)\n$$\ngiven the priors and hyperpriors $\\theta_j \\sim \\text{N}(\\mu_\\theta, \\sigma_\\theta^2=1/\\tau_\\theta)$, $\\mu_\\theta \\sim \\text{N}(0, 10^6)$, and $\\sigma_\\theta \\sim \\text{U}(0, 1000)$.\n```{r}\ndata(schools)\nschools\n```\n\n### Model specification\n\nTo specify the model, we use the same syntax as we did in WinBUGS. Create a `.txt` or `.bug` file to store the model at local path. Also, we can write out the text file With the help of R as follow. For convenience, a `.bug` file is provided with the link.\n```{r, eval=FALSE}\n# mod1 <- \"model {\n#   for (j in 1:J)\n#   {\n#     y[j] ~ dnorm (theta[j], tau.y[j])\n#     theta[j] ~ dnorm (mu.theta, tau.theta)\n#     tau.y[j] <- pow(sigma.y[j], -2)\n#   }\n#   mu.theta ~ dnorm (0.0, 1.0E-6)\n#   tau.theta <- pow(sigma.theta, -2)\n#   sigma.theta ~ dunif (0, 1000)\n# }\"\n# writeLines(mod1, \"/path/to/model/mod1.bug\")\n\nmodel_url <- \n  \"https://raw.githubusercontent.com/XinweiBuffalo/WinBUGS/main/model/mod1.bug\"\n```\n\n### Load data and initial values\nData and initial values can be arranged as lists in R script. Save initial values lists to be function avoid repeated specifying values for multiple chains.\n```{r}\nJ <- nrow(schools)\ny <- schools$estimate\nsigma.y <- schools$sd\ndata <- list(\"J\", \"y\", \"sigma.y\")\n\ninits <- function(){\n  list(theta = rnorm(J, 0, 100), \n       mu.theta = rnorm(1, 0, 100),\n       sigma.theta = runif(1, 0, 100))\n}\n\n```\n\n### Run sampler\nThe sampler function `bugs()` has many arguments to control the sample generation process. For details, please see the R document. The output is a bugs object. We can take the MCMC samples from it and do further inference.\n```{r, warning=FALSE, error=FALSE}\n# schools.sim <- bugs(data = data, \n#                     inits = inits, \n#                     model.file = ,\n#                     parameters = c(\"theta\", \"mu.theta\", \"sigma.theta\"),\n#                     n.chains = 3, \n#                     n.iter = 1000,\n#                     bugs.directory = \"c:/Program Files/WinBUGS14/\")\n\nschools.sim <- bugs(data = data, \n                    inits = inits, \n                    model.file = \"C:/Users/Xinwei/Desktop/BUGS/mod1.bug\",\n                    parameters = c(\"theta\", \"mu.theta\", \"sigma.theta\"),\n                    n.chains = 4, \n                    n.iter = 3000,\n                    n.burnin = 1000,\n                    n.sims = 2000,\n                    bugs.seed = 1234,\n                    bugs.directory = \"c:/Program Files/WinBUGS14\")\n\n\n```\n\n\n### Inference on MCMC samples\nJust show some basic analysis. You can play more on it.\n```{r}\n\n# summary statistics\nprint(schools.sim)\nplot(schools.sim)\n\n# trace plot\nplot(schools.sim$sims.list$theta[,1]~c(1:2000), \n     type = \"l\", \n     col = \"red\", \n     xlab = \"t\",\n     ylab = expression(theta[1]))\n\nplot(density(schools.sim$sims.list$theta[,1]))\n\n# More inference\n\n# Bayes type-I error for testing H0: theta_1<10\nmean(schools.sim$sims.list$theta[,1]>10)\n\n# Compare the treatment effect\nmean(schools.sim$sims.list$theta[,1])>mean(schools.sim$sims.list$theta[,3])\n\n```\n\n\n"},"formats":{"html":{"execute":{"fig-width":7,"fig-height":5,"fig-format":"retina","fig-dpi":96,"df-print":"default","error":false,"eval":true,"cache":null,"freeze":false,"echo":true,"output":true,"warning":true,"include":true,"keep-md":false,"keep-ipynb":false,"ipynb":null,"enabled":null,"daemon":null,"daemon-restart":false,"debug":false,"ipynb-filters":[],"engine":"knitr"},"render":{"keep-tex":false,"keep-source":false,"keep-hidden":false,"prefer-html":false,"output-divs":true,"output-ext":"html","fig-align":"default","fig-pos":null,"fig-env":null,"code-fold":"none","code-overflow":"scroll","code-link":false,"code-line-numbers":false,"code-tools":false,"tbl-colwidths":"auto","merge-includes":true,"latex-auto-mk":true,"latex-auto-install":true,"latex-clean":true,"latex-max-runs":10,"latex-makeindex":"makeindex","latex-makeindex-opts":[],"latex-tlmgr-opts":[],"latex-input-paths":[],"latex-output-dir":null,"link-external-icon":false,"link-external-newwindow":false,"self-contained-math":false,"format-resources":[]},"pandoc":{"standalone":true,"wrap":"none","default-image-extension":"png","to":"html","css":["styles.css"],"toc":true,"output-file":"index.html"},"language":{},"metadata":{"lang":"en","fig-responsive":true,"quarto-version":"1.2.269","editor":"visual","theme":"cosmo","title":"A quick tutorial of WinBUGS and R2WinBUGS","title-block-banner":true,"date":"2023-04-17","date-format":"short","author":[{"name":"Xin-Wei Huang","affiliations":["Department of Biostatistics, University at Buffalo"]}],"description":"Lecture of STA667 Advanced Bayesian Inference in 2023 Spring"},"extensions":{"book":{"multiFile":true}}}}}