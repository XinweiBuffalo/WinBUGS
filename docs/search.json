[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "A quick tutorial of WinBUGS and R2WinBUGS",
    "section": "",
    "text": "The BUGS (Bayesian inference Using Gibbs Sampling) is a project on developing software for the Bayesian analysis of complex statistical models using Markov chain Monte Carlo (MCMC) methods. The project started in 1989 at the MRC Biostatistics Unit. WinBUGS is a statistical software based on BUGS project initially released in 1997 by MRC Biostatistics Unit, and Imperial College School of Medicine. It is a GUI for using BUGS program on Windows system. WinBUGS is no longer update since 2007 because the development of OpenBUGS. The latest version of WinBUGS is 1.4.3.\n\n\n\nDownload WinBUGS 1.4.3 on your PC:\n\n.zip file for Windows 64 bit or 32 bit. (Recommended)\n.exe file for easier installation but 32 bit Windows only.\n\nExtract file folder \\winbugs143_unrestricted.zip\\winbugs14_full_patched\\WinBUGS14 to a path that you want to store the software, for example C:\\Program Files.\nCreate a shortcut for WinBUGS14.exe to desktop or start.\n\nFor macOS, please check the link.\n\n\n\nConsider a statistical model \\[\nX_i \\sim \\text{Normal}(\\mu,\\sigma^2)\n\\] and given the prior distributions \\(\\mu \\sim \\text{Normal}(0, 100^2)\\) and \\(1 / {\\sigma}^2 \\sim \\text{Gamma}(0.001, 0.001)\\).\nA WinBUGS program is consist of three sections: Model, Data, and Initial Values. Define our model in model{...}. Use ~ to specify probability distributions, or use <- to make transformation of parameter and data. Data will be stored in a list which has the same syntax as R. Initial values are also stored in a list.\n```{bugs}\n\nmodel{\n  for (i in 1:20){\n    x[i] ~ dnorm (mu[1], prec[1])\n  }\n  \n  mu[1] ~ dnorm (0, 0.0001)\n  prec[1] ~ dgamma (0.001, 0.001)\n  \n  s2[1] <- 1/prec[1]\n}\n\nlist(x = c(6.62, 6.71, 5.07, 4.39, 5.68, 3.94, 5.83, 2.31, 3.60, 4.64,\n1.79, 3.12, 3.46, 8.25, 5.49, 6.49, 2.65, 9.14, 5.31, 6.58))\n\nlist( mu=c(0), prec=c(1) )\n```\nNote: In BUGS, the second parameter of dnorm is the inverse of normal variance.\nNow let’s see how to run these codes in WinBUGS. Open WinBUGS and create an empty script (File -> New). \nCopy the above code and paste them into WinBUGS. \nOpen the Specification Tool (Model -> Specification), then highlight the model section and do “check model”. If you define your model correctly, it will show “model is syntactically correct.” at the bottom left-hand corner. \nThe next step is to load the data. Highlight data section and click “load data”. You will see “data loaded”at the bottom left-hand corner. \nAnd then compile the model by click “compile” and look for “model compiled.” \nSimilarly, highlight the initial values and click “load inits”. \nOpen Sample Monitor Tool (Inference -> Samples), type in the parameters that we are going to monitor, for example “mu” and “s2”, then click “set”. \nOpen Update Tool (Model -> Update) and type in how many samples you would like to generate. Click “update” and wait for “updates took x s” message when update done. \nYou can use Sample Monitor Tool to do summary statistics, time series plot for MCMC samples, density curve, etc."
  },
  {
    "objectID": "index.html#install-r2winbugs-package",
    "href": "index.html#install-r2winbugs-package",
    "title": "A quick tutorial of WinBUGS and R2WinBUGS",
    "section": "Install R2WinBUGS package",
    "text": "Install R2WinBUGS package\nUse install.packages and library to install and load the package.\n\n#install.packages(\"R2WinBUGS\")\nlibrary(\"R2WinBUGS\")"
  },
  {
    "objectID": "index.html#school-data-example",
    "href": "index.html#school-data-example",
    "title": "A quick tutorial of WinBUGS and R2WinBUGS",
    "section": "School data example",
    "text": "School data example\nThe Scholastic Aptitude Test (SAT) data comes from the SAT-V (Verbal) on eight different high schools from an experiment Rubin (1981). The data includes the estimated treatment effects and the corresponding standard error from an ANCOVA. This example was analyzed using a hierarchical normal model: \\[\ny_i\\sim \\text{Normal}(\\theta_j, \\sigma_j^2)\n\\] given the priors and hyperpriors \\(\\theta_j \\sim \\text{N}(\\mu_\\theta, \\sigma_\\theta^2=1/\\tau_j)\\), \\(\\mu_\\theta \\sim \\text{N}(0, 10^6)\\), and \\(\\sigma_\\theta \\sim \\text{U}(0, 1000)\\).\n\ndata(schools)\nschools\n\n  school estimate   sd\n1      A    28.39 14.9\n2      B     7.94 10.2\n3      C    -2.75 16.3\n4      D     6.82 11.0\n5      E    -0.64  9.4\n6      F     0.63 11.4\n7      G    18.01 10.4\n8      H    12.16 17.6\n\n\n\nModel specification\nTo specify the model, we use the same syntax as we did in WinBUGS. Then create a .txt or .bug file to store the model at local path. It is also allowed to use a function containing a BUGS model since is has the similar syntax as R. While applying this model, only a temporary file will be created.\n\nmod1 <- function(){\n  for (j in 1:J)\n  {\n    y[j] ~ dnorm (theta[j], tau.y[j])\n    theta[j] ~ dnorm (mu.theta, tau.theta)\n    tau.y[j] <- pow(sigma.y[j], -2)\n  }\n  mu.theta ~ dnorm (0.0, 1.0E-6)\n  tau.theta <- pow(sigma.theta, -2)\n  sigma.theta ~ dunif (0, 1000)\n}\n\nNote: When using truncation specification, %_% will be needed. Check ?R2WinBUGS::write.model() for more details.\n\n\nLoad data and initial values\nData and initial values can be arranged as lists in R script. Save initial values lists to be function avoid repeated specifying values for multiple chains.\n\nJ <- nrow(schools)\ny <- schools$estimate\nsigma.y <- schools$sd\ndata <- list(\"J\", \"y\", \"sigma.y\")\n\ninits <- function(){\n  list(theta = rnorm(J, 0, 100), \n       mu.theta = rnorm(1, 0, 100),\n       sigma.theta = runif(1, 0, 100))\n}\n\n\n\nRun sampler\nThe sampler function bugs() has many arguments to control the sample generation process. For details, please see ?R2WinBUGS::bugs(). The output is a bugs object. We can take the MCMC samples from it and do further inference. ()\n\nschools.sim <-  bugs(data = data,\n                     inits = inits,\n                     model.file = mod1,\n                     parameters.to.save \n                     = c(\"theta\", \"mu.theta\", \"sigma.theta\"),\n                     n.chains = 4,\n                     n.iter = 2000,\n                     bugs.directory = \"c:/Program Files/WinBUGS14/\")\n\nNote: If you receive any error message about “Cannot open the connection” or “Permission denied”, please reopen Rstudio with Run as administrator.\n\n\nInference on MCMC samples\nJust show some basic analysis. You can play more on it.\n\n# summary statistics\nprint(schools.sim)\n\nInference for Bugs model at \"C:/Users/Xinwei/AppData/Local/Temp/RtmpQ7DaKj/model4bc851e4a71.txt\", fit using WinBUGS,\n 4 chains, each with 2000 iterations (first 1000 discarded), n.thin = 4\n n.sims = 1000 iterations saved\n            mean  sd  2.5%  25%  50%  75% 97.5% Rhat n.eff\ntheta[1]    12.4 8.7  -2.5  6.6 11.2 16.9  32.5    1   360\ntheta[2]     8.4 6.9  -5.1  4.2  8.2 12.6  22.6    1  1000\ntheta[3]     6.8 8.4 -11.5  1.9  7.4 12.3  23.7    1   810\ntheta[4]     8.3 7.0  -6.2  4.2  8.4 12.4  22.7    1  1000\ntheta[5]     5.3 7.1 -10.1  1.1  5.8 10.4  17.2    1   340\ntheta[6]     6.2 7.4 -10.2  1.9  6.4 11.2  19.3    1   390\ntheta[7]    11.2 7.0  -0.7  6.4 10.6 15.4  26.9    1  1000\ntheta[8]     9.2 8.4  -7.3  4.5  9.0 14.1  26.2    1  1000\nmu.theta     8.4 5.4  -2.3  4.9  8.1 12.0  19.0    1  1000\nsigma.theta  7.2 5.6   0.5  3.0  5.9 10.3  20.9    1    85\ndeviance    60.7 2.3  57.1 59.2 60.2 61.8  66.5    1   770\n\nFor each parameter, n.eff is a crude measure of effective sample size,\nand Rhat is the potential scale reduction factor (at convergence, Rhat=1).\n\nDIC info (using the rule, pD = Dbar-Dhat)\npD = 3.1 and DIC = 63.8\nDIC is an estimate of expected predictive error (lower deviance is better).\n\nplot(schools.sim)\n\n\n\n# time series plot\nplot(schools.sim$sims.list$theta[,1]~c(1:schools.sim$n.sims), \n     type = \"l\", \n     col = \"red\", \n     xlab = \"t\",\n     ylab = expression(theta[1]))\n\n\n\nplot(density(schools.sim$sims.list$theta[,1]))\n\n\n\n# More inference\n\n# Bayes type-I error for testing H0: theta_1<10\nmean(schools.sim$sims.list$theta[,1]>10)\n\n[1] 0.571\n\n# Compare the treatment effect\nmean(schools.sim$sims.list$theta[,1])>mean(schools.sim$sims.list$theta[,3])\n\n[1] TRUE"
  }
]